{
  "rules": {
    ".read": false,
    ".write": false,
    
    "users": {
      "$uid": {
        ".read": "auth != null && (auth.uid == $uid || root.child('users').child(auth.uid).child('isAdmin').val() == true)",
        ".write": "auth != null && auth.uid == $uid",
        ".validate": "newData.hasChildren(['name', 'email', 'uid']) && newData.child('uid').val() == $uid",
        
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9+_.-]+@(.+)$/)"
        },
        "phone": {
          ".validate": "newData.isString()"
        },
        "profileImageUrl": {
          ".validate": "newData.isString()"
        },
        "isAdmin": {
          ".validate": "newData.isBoolean()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    
    "products": {
      ".read": "auth != null",
      "$productId": {
        ".write": "auth != null && (newData.child('sellerId').val() == auth.uid || root.child('users').child(auth.uid).child('isAdmin').val() == true)",
        ".validate": "newData.hasChildren(['title', 'description', 'price', 'sellerId']) && newData.child('price').val() > 0",
        
        "title": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "description": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "price": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "brand": {
          ".validate": "newData.isString()"
        },
        "size": {
          ".validate": "newData.isString()"
        },
        "condition": {
          ".validate": "newData.isString()"
        },
        "sellerId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "imageUrls": {
          ".validate": "newData.hasChildren()"
        },
        "status": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 2"
        },
        "isForRent": {
          ".validate": "newData.isBoolean()"
        },
        "likes": {
          ".validate": "newData.hasChildren()",
          "$userId": {
            ".validate": "newData.isString()"
          }
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    
    "activities": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() == true",
      "$activityId": {
        ".write": "auth != null",
        ".validate": "newData.hasChildren(['type', 'userId', 'description', 'timestamp'])",
        
        "type": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "userId": {
          ".validate": "newData.isString()"
        },
        "targetId": {
          ".validate": "newData.isString()"
        },
        "description": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "timestamp": {
          ".validate": "newData.isNumber()"
        }
      }
    }
  }
}
